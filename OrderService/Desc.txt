# 🛠️ Домашнее задание: Мини-проект с сериализацией (C#)

## 📌 Цель
Разработать мини-приложение на C#, которое реализует базовую систему учёта пользователей и их заказов в сервисе, с возможностью входа в систему, регистрации и сохранения данных с использованием **Binary, XML и JSON-сериализации**.

---

## 📋 Функциональные требования

### 🔐 Авторизация и Регистрация
- Реализовать регистрацию пользователей с:
  - уникальным `username`
  - `password` (хранится в сериализованной форме, можно в виде строки)
- Логин с проверкой логина и пароля

> Пароли можно не хэшировать (но по желанию можно использовать `SHA256`).

---

### 👤 Пользователь

После входа пользователь может:

- 📄 Посмотреть список своих заказов
- ➕ Добавить новый заказ
- 💾 Сохранить все свои данные в один из выбранных форматов: JSON / XML / Binary
- 📤 Загрузить сохранённые данные

---

### 📦 Заказы

Пользователь может создавать заказы, включающие:
- Название заказа
- Дата
- Перечень услуг (название, цена)
- Общая сумма

---

## 📁 Сохранение данных

Все данные пользователя (включая заказы) должны сериализоваться:
- В **JSON-файл** (`System.Text.Json` или `Newtonsoft.Json`)
- В **XML-файл**
- В **Binary-файл**

> Каждому пользователю создается отдельная папка:
> ```
> /data/{username}/orders.json
> /data/{username}/orders.xml
> /data/{username}/orders.dat
> ```

---

## 🧱 Минимальная структура

- Пользователь (логин, пароль, список заказов)
- Заказ (название, дата, услуги)
- Услуга (описание, цена)

---

## 📊 Консольное меню

После входа реализовать интерактивное меню:

```
1. Просмотр заказов
2. Добавить заказ
3. Сохранить данные
4. Загрузить данные
5. Выйти
```

---

## 🛡️ Обработка ошибок

- Проверка на пустые поля при регистрации
- Сообщение при попытке зарегистрировать уже существующего пользователя
- Защита от ошибок при десериализации (например, поврежденный файл)

---

## 🧠 Дополнительно (по желанию)

- Добавьте лог-файл (`log.txt`) с действиями пользователя (вход, сохранение, загрузка)
- Сравните размеры сериализованных файлов разных типов
- Покажите сумму всех заказов пользователя
- Автоматическая загрузка данных при входе

---

## ✅ Что сдавать

- Исходный код проекта
- Примеры сериализованных файлов (`*.json`, `*.xml`, `*.dat`)
- Скриншоты работы программы (опционально)

---

Удачи, и пусть сериализация станет для вас привычной задачей! 🚀
